/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: KangaroOz 3D (https://sketchfab.com/KangaroOz-3D)
License: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
Source: https://sketchfab.com/3d-models/macbook-pro-2021-37763335f74b497e91906986b170b5d1
Title: MacBook Pro 2021
*/

import { useGLTF, useVideoTexture } from '@react-three/drei'

const DemoMac = (props: any) => {
    const { nodes, materials }: any = useGLTF('/MacBook.glb');
    nodes.Object_6.geometry.computeBoundingBox();

    const customTexture = useVideoTexture(props.texture? props.texture : 'Briefcase.mp4');

    const bbox = nodes.Object_6.geometry.boundingBox;
    const width = bbox.max.x - bbox.min.x;
    const height = bbox.max.y - bbox.min.y;

    const xCenter = (bbox.min.x + bbox.max.x) / 2;
    const yCenter = (bbox.min.y + bbox.max.y) / 2;
    const zCenter = (bbox.min.z + bbox.max.z) / 2;
    const overlayWidth = width * 0.9;
    const overlayHeight = height * 0.8;

    return (
        <group {...props} dispose={null}>
        <group position={[0.121, 0.007, 0]}>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_6.geometry}
                material={materials.MacBookPro}
            />

            <mesh
                position={[bbox.min.x -0.001, yCenter + 0.0024, zCenter-0.0005]} // center and a bit in front
                rotation={[0, Math.PI * 1.5, 0]}
            >
                <planeGeometry args={[overlayWidth + 0.343, overlayHeight + 0.013]}/>
                <meshBasicMaterial map={customTexture} />
            </mesh>

            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_8.geometry}
                material={materials.MacBookPro}
            />
        </group>
        <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_4.geometry}
            material={materials.MacBookPro}
        />
        </group>
    )
}

useGLTF.preload('/MacBook.glb')

export default DemoMac;